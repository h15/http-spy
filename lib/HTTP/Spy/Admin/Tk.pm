package HTTP::Spy::Admin::Tk;use Pony::Object -singleton;  use Tk;  use threads;  use HTTP::Spy::Admin;  use HTTP::Spy::Packet;    protected window => undef;  protected method => {    GET     => 0,    POST    => 0,    PUT     => 0,    HEAD    => 0,    DELETE  => 0,  };  protected except => 'ico|jpg|jpeg|gif|png|js|css';  protected host   => '';  protected direction => {    to    => 0,    from  => 0,  };      sub init : Public    {      my $this = shift;      threads->create(\&loop, $this)->detach();    }    sub show : Public    {          }    sub send : Public    {    }    sub inspect : Public    {      my $this = shift;      my $packet = shift;            # If does not match      return $packet unless HTTP::Spy::Admin->new->match($packet);            $packet = new HTTP::Spy::Packet( $packet );      my $key = Digest::MD5::md5_hex(rand);      $packet->packetId = $key;      $requests{$key} = &shared_clone( $packet->toHash() );            while ( sleep(1) )      {        next unless exists $inspected{$key}; # Wait                # Update headers.        for my $k ( keys %{$inspected{$key}} )        {          my $v = $inspected{$key}{$k};          $packet->header->{$k} = "$v" if exists $packet->header->{$k};        }                # Update body if needed.        $packet->body = $inspected{$key}{content} if $inspected{$key}{content};                HTTP::Spy->new->log("Packet $key sent.");                return ( $packet->isResponse ? $packet->toResponse() : $packet->toSpyRequest() );    }  sub loop : Protected    {      my $this = shift;      $this->window = MainWindow->new();              # Main window.        $this->window->title("HTTP::Spy");        $this->window->geometry('400x300');                # Method.        $this->window->Checkbutton(-text => 'GET',   -command => sub { ++$this->method->{GET}    })->place(-x => 10, -y => 10);        $this->window->Checkbutton(-text => 'POST',  -command => sub { ++$this->method->{POST}   })->place(-x => 10, -y => 30);        $this->window->Checkbutton(-text => 'PUT',   -command => sub { ++$this->method->{PUT}    })->place(-x => 10, -y => 50);        $this->window->Checkbutton(-text => 'HEAD',  -command => sub { ++$this->method->{HEAD}   })->place(-x => 10, -y => 70);        $this->window->Checkbutton(-text => 'DELETE',-command => sub { ++$this->method->{DELETE} })->place(-x => 10, -y => 90);                # Host.        $this->window->Label(-text => 'Host')->place(-x => 100, -y => 10);          $this->window->Entry(-width => 20, -textvariable => \$this->{host})->place(-x => 160, -y => 10);                # Except extensions.        $this->window->Label(-text => 'Except')->place(-x => 100, -y => 30);          $this->window->Entry(-width => 20, -textvariable => \$this->{except})->place(-x => 160, -y => 30);                # Direction: form or to server.        $this->window->Label(-text => 'Direction:')->place(-x => 100, -y => 70);        $this->window->Checkbutton(-text => 'To server',  -command => sub { ++$this->direction->{to}   })->place(-x => 174, -y => 70);        $this->window->Checkbutton(-text => 'From server',-command => sub { ++$this->direction->{from} })->place(-x => 174, -y => 90);                # Button.        $this->window->Button(-text => "Setup inspect params", -command => sub { $this->saveConfig() } )->place(-x => 150, -y => 120);            MainLoop;    }    sub saveConfig : Protected    {      my $this = shift;            $HTTP::Spy::Admin::InspectConfig{'method-GET'}    = $this->method->{GET}    % 2;      $HTTP::Spy::Admin::InspectConfig{'method-POST'}   = $this->method->{POST}   % 2;      $HTTP::Spy::Admin::InspectConfig{'method-PUT'}    = $this->method->{PUT}    % 2;      $HTTP::Spy::Admin::InspectConfig{'method-HEAD'}   = $this->method->{HEAD}   % 2;      $HTTP::Spy::Admin::InspectConfig{'method-DELETE'} = $this->method->{DELETE} % 2;            $HTTP::Spy::Admin::InspectConfig{'direction-toServer'}   = $this->direction->{to}   % 2;      $HTTP::Spy::Admin::InspectConfig{'direction-fromServer'} = $this->direction->{from} % 2;            $HTTP::Spy::Admin::InspectConfig{'extensions-except'} = $this->except;      $HTTP::Spy::Admin::InspectConfig{'host'} = $this->host;    }1;